#!/usr/bin/env python

import argparse
import sys

from common.credentials import get_credentials
from common.github import get_github
from common import BASE_GITHUB_URL, ERROR

def parse_args():
    """
    Usage: git view-diffs user/repo baseref [--headref]
    :return: args.(repo, base, head)
    """

    parser = argparse.ArgumentParser(description='git-view-diffs')

    parser.add_argument(
            'repo',
            help='user/repo')

    parser.add_argument(
            'base',
            help='base ref/tag, defaults to \'latest\'',
            nargs='?',
            default='latest')

    parser.add_argument(
            'head',
            help='head ref/tag, defaults to \'master\'',
            nargs='?',
            default='master')

    parser.add_argument(
            '-v',
            '--verbose',
            help='print full commit messages',
            action='store_true',
            default=False)

    args = parser.parse_args()
    return args


def main():
    (username, token) = get_credentials()
    args = parse_args()

    tags = get_github(
            repo=args.repo,
            endpoint='/tags',
            username=username,
            token=token)

    if len(tags) == 0:
        raise Exception('No tags found.')

    if args.base == 'latest':
        base = tags[0]['name']
        base_sha = tags[0]['commit']['sha']
    else:
        named_tags = [tag for tag in tags if tag['name'] == args.base]
        if len(named_tags) == 0:
            raise Exception('No tag named \'{}\' found.'.format(args.base))
        base = named_tags[0]['name']
        base_sha = tags[0]['commit']['sha']

    commits = get_github(
            repo=args.repo,
            endpoint='/compare/{base}...{head}'.format(base=base, head=args.head),
            username=username,
            token=token)

    def format_commit_message(commit):
        date = commit['commit']['author']['date']
        login = commit['author']['login']
        message = commit['commit']['message']
        return '[{}] @{}\n{}'.format(date, login, message)

    commit_messages = [format_commit_message(c) for c in commits['commits']]
    formatted_commit_messages = '\n\n'.join(commit_messages)
    diff_url = BASE_GITHUB_URL + '/' + args.repo + '/compare/{base}...{head}'.format(base=base, head=args.head)

    if args.verbose:
        print(formatted_commit_messages)
        print('\n')

    num_untagged_commits = len(commits['commits'])
    untagged_commits = 'There are {} commit(s) between these versions.'.format(num_untagged_commits)
    print(untagged_commits)
    print(diff_url)

if __name__ == '__main__':
    try:
        sys.exit(main())
    except Exception as e:
        print(e)
        sys.exit(ERROR)
